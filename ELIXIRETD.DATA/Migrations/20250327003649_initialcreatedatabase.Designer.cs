// <auto-generated />
using System;
using ELIXIRETD.DATA.DATA_ACCESS_LAYER.STORE_CONTEXT;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ELIXIRETD.DATA.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20250327003649_initialcreatedatabase")]
    partial class initialcreatedatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.BORROWED_MODEL.BorrowedConsume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitles")
                        .HasColumnType("longtext");

                    b.Property<int>("BorrowedItemPkey")
                        .HasColumnType("int");

                    b.Property<int>("BorrowedPkey")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Consume")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsApproveReturn")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<int?>("ReportNumber")
                        .HasColumnType("int");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BorrowedConsumes");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.BORROWED_MODEL.BorrowedIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AgingDays")
                        .HasColumnType("int");

                    b.Property<string>("ApproveBy")
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedReturnedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsApprovedDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsApprovedReturned")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsApprovedReturnedDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsReject")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsRejectDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("RejectBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("ReturnBy")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusApproved")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BorrowedIssues");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.BORROWED_MODEL.BorrowedIssueDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AgingDays")
                        .HasColumnType("int");

                    b.Property<string>("ApproveBy")
                        .HasColumnType("longtext");

                    b.Property<string>("ApprovedReturnedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("BorrowedDate")
                        .HasColumnType("Date");

                    b.Property<int>("BorrowedPKey")
                        .HasColumnType("int");

                    b.Property<decimal>("Consume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsApprovedDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsApprovedReturned")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsApprovedReturnedDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsReject")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("IsRejectDate")
                        .HasColumnType("Date");

                    b.Property<bool?>("IsReturned")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RejectBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("ReturnBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("Date");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BorrowedIssueDetails");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Account_Title_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Account_Title_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Added_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Approve_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Approve_By")
                        .HasColumnType("longtext");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("Company_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Company_Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Department_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("Fullname")
                        .HasColumnType("longtext");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Is_Approve")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Is_Reject")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Is_Transact")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Location_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Location_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Modified_By")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Odometer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Reject_By")
                        .HasColumnType("longtext");

                    b.Property<string>("Reject_Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestorId")
                        .HasColumnType("longtext");

                    b.Property<string>("RequestorName")
                        .HasColumnType("longtext");

                    b.Property<string>("Source")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Transact_At")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Transact_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("FuelRegisters");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegisterDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Added_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FuelRegisterId")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("Liters")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Modified_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Warehouse_ReceivingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuelRegisterId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("Warehouse_ReceivingId");

                    b.ToTable("FuelRegisterDetails");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.IMPORT_MODEL.PoSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("ActualRemaining")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Billed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CancelBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateCancelled")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Delivered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCancelled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsReceived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Ordered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PO_Date")
                        .HasColumnType("Date");

                    b.Property<string>("PO_Number")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PR_Date")
                        .HasColumnType("Date");

                    b.Property<string>("PR_Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PR_Year_Number")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RRDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RRNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReceiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SINumber")
                        .HasColumnType("longtext");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.Property<string>("VendorName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("PoSummaries");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.INVENTORY_MODEL.MiscellaneousIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Customer")
                        .HasColumnType("longtext");

                    b.Property<string>("Customercode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MiscellaneousIssues");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.INVENTORY_MODEL.MiscellaneousIssueDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitles")
                        .HasColumnType("longtext");

                    b.Property<string>("Customer")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IssuePKey")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MiscellaneousIssueDetail");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.INVENTORY_MODEL.MiscellaneousReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.Property<string>("supplier")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MiscellaneousReceipts");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.ORDERING_MODEL.GenerateOrderNo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Rush")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("GenerateOrders");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.ORDERING_MODEL.MoveOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitles")
                        .HasColumnType("longtext");

                    b.Property<string>("AddressOrder")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ApproveDateTempo")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("Date");

                    b.Property<string>("Approver")
                        .HasColumnType("longtext");

                    b.Property<string>("AssetTag")
                        .HasColumnType("longtext");

                    b.Property<string>("Asset_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Asset_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("CancelBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Cip_No")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerType")
                        .HasColumnType("longtext");

                    b.Property<string>("Customercode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateNeeded")
                        .HasColumnType("Date");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<int?>("HelpdeskNo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsApprove")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsApproveReject")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCancel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPrepared")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPrint")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsReject")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Is_Asset_Tag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("Date");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("OrderNoGenus")
                        .HasColumnType("int");

                    b.Property<int>("OrderNoPkey")
                        .HasColumnType("int");

                    b.Property<string>("Plate_No")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("QuantityOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RejectBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("RejectedDateTempo")
                        .HasColumnType("Date");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("Requestor")
                        .HasColumnType("longtext");

                    b.Property<string>("Rush")
                        .HasColumnType("longtext");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MoveOrders");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.ORDERING_MODEL.Ordering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitles")
                        .HasColumnType("longtext");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("AddressOrder")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Approver")
                        .HasColumnType("longtext");

                    b.Property<string>("AssetTag")
                        .HasColumnType("longtext");

                    b.Property<string>("Asset_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Asset_Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Cip_No")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerType")
                        .HasColumnType("longtext");

                    b.Property<string>("Customercode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateNeeded")
                        .HasColumnType("Date");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<int?>("HelpdeskNo")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCancel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IsCancelBy")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsMove")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPrepared")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsReject")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsRush")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemRemarks")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemdDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<int>("MIRId")
                        .HasColumnType("int");

                    b.Property<string>("Modified_By")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Modified_Date")
                        .HasColumnType("Date");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("Date");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("OrderNoPKey")
                        .HasColumnType("int");

                    b.Property<string>("Plate_No")
                        .HasColumnType("longtext");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("QuantityOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RejectBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("Requestor")
                        .HasColumnType("longtext");

                    b.Property<string>("Rush")
                        .HasColumnType("longtext");

                    b.Property<decimal>("StandartQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.Property<int>("TrasactId")
                        .HasColumnType("int");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.ORDERING_MODEL.TransactMoveOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerType")
                        .HasColumnType("longtext");

                    b.Property<string>("Customercode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsApprove")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTransact")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemRemarks")
                        .HasColumnType("longtext");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("OrderNoPkey")
                        .HasColumnType("int");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("PreparedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Rush")
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransactOrder");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("AssetCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AssetName")
                        .HasColumnType("longtext");

                    b.Property<int?>("AssetNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Manual")
                        .HasColumnType("longtext");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerType")
                        .HasColumnType("longtext");

                    b.Property<int>("Customer_No")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCategoryName")
                        .HasColumnType("longtext");

                    b.Property<int>("ItemCategory_No")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LocationName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.LotNames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LotCode")
                        .HasColumnType("longtext");

                    b.Property<string>("LotName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lotnames");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.LotSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LotNamesId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LotNamesId");

                    b.ToTable("LotSections");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("BufferLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCategoryName")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("LotSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("Material_No")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UomCode")
                        .HasColumnType("longtext");

                    b.Property<int>("UomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("LotSectionId");

                    b.HasIndex("UomId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ReasonName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MainMenuId");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Manual")
                        .HasColumnType("longtext");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("longtext");

                    b.Property<string>("SupplierName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Supplier_No")
                        .HasColumnType("int");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Addedby")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TransactionName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.Uom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StatusSync")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SyncDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UomCode")
                        .HasColumnType("longtext");

                    b.Property<string>("UomDescription")
                        .HasColumnType("longtext");

                    b.Property<int>("UomNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Uoms");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.MainMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<string>("MenuPath")
                        .HasColumnType("longtext");

                    b.Property<string>("ModuleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("MainMenus");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MainMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleName")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("SubMenuName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MainMenuId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserRoleName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.UserRoleModules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleModules");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.WAREHOUSE_MODEL.Warehouse_Receiving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("longtext");

                    b.Property<string>("AccountTitles")
                        .HasColumnType("longtext");

                    b.Property<decimal>("ActualDelivered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ActualGood")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualReceiving")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("ActualReceivingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("ConfirmRejectByWarehouse")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EmpId")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsWarehouseReceived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("LotSection")
                        .HasColumnType("longtext");

                    b.Property<int?>("MiscellaneousReceiptId")
                        .HasColumnType("int");

                    b.Property<string>("PR_Year_Number")
                        .HasColumnType("longtext");

                    b.Property<string>("PoNumber")
                        .HasColumnType("longtext");

                    b.Property<int>("PoSummaryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RRDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RRNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReceivingDate")
                        .HasColumnType("Date");

                    b.Property<string>("SINumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Supplier")
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalReject")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Uom")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WarehouseReceived");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegister", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegisterDetail", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegister", "FuelRegister")
                        .WithMany("FuelRegisterDetails")
                        .HasForeignKey("FuelRegisterId");

                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.WAREHOUSE_MODEL.Warehouse_Receiving", "Warehouse_Receiving")
                        .WithMany()
                        .HasForeignKey("Warehouse_ReceivingId");

                    b.Navigation("FuelRegister");

                    b.Navigation("Material");

                    b.Navigation("Warehouse_Receiving");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.LotSection", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.LotNames", "LotNames")
                        .WithMany()
                        .HasForeignKey("LotNamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LotNames");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Material", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.ItemCategory", "ItemCategory")
                        .WithMany()
                        .HasForeignKey("ItemCategoryId");

                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.LotSection", "LotSection")
                        .WithMany()
                        .HasForeignKey("LotSectionId");

                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.Uom", "Uom")
                        .WithMany()
                        .HasForeignKey("UomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemCategory");

                    b.Navigation("LotSection");

                    b.Navigation("Uom");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.SETUP_MODEL.Reason", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.MainMenu", "MainMenu")
                        .WithMany()
                        .HasForeignKey("MainMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainMenu");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.Module", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.MainMenu", "MainMenu")
                        .WithMany()
                        .HasForeignKey("MainMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainMenu");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.User", b =>
                {
                    b.HasOne("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.USER_MODEL.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("ELIXIRETD.DATA.DATA_ACCESS_LAYER.MODELS.FUEL_REGISTER_MODEL.FuelRegister", b =>
                {
                    b.Navigation("FuelRegisterDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
